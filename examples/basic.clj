(ns basic
  (:require [tipster.core :as tipster]
            [tipster.i18n :as i18n]))

(defn description
  "Example description / –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞"
  [& {:keys [lang] :or {lang (i18n/detect-language)}}]
  (case lang
    :ru {:title "üîπ –ü—Ä–∏–º–µ—Ä 1: –û—Å–Ω–æ–≤—ã"
         :subtitle "–ò–∑—É—á–∞–µ–º —Ñ–∞–∫—Ç—ã –∏ –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã"
         :what-you-learn ["–ö–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–∞–∫—Ç—ã —Å deffact"
                          "–ö–∞–∫ –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã —Å query"
                          "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (?X, ?Y)"
                          "–û—Å–Ω–æ–≤–Ω–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Tipster"]
         :next "./scripts/run-example.sh family"}
    :en {:title "üîπ Example 1: Basics"
         :subtitle "Learning facts and simple queries"
         :what-you-learn ["How to add facts with deffact"
                          "How to make queries with query"
                          "Using variables (?X, ?Y)"
                          "Basic Tipster syntax"]
         :next "./scripts/run-example.sh family"}))

(defn run-example
  "Run basic example / –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞"
  [& {:keys [lang] :or {lang (i18n/detect-language)}}]
  (let [desc (description :lang lang)]
    (println "\n" (:title desc))
    (println (apply str (repeat 50 "=")))
    
    (tipster/reset-tipster!)
    
    ;; Add facts about people / –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—Ç—ã –æ –ª—é–¥—è—Ö
    (tipster/deffact (—á–µ–ª–æ–≤–µ–∫ –∞–ª–∏—Å–∞))
    (tipster/deffact (—á–µ–ª–æ–≤–µ–∫ –±–æ–±))
    (tipster/deffact (—á–µ–ª–æ–≤–µ–∫ —á–∞—Ä–ª–∏))
    
    ;; Add facts about professions / –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—Ç—ã –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è—Ö
    (tipster/deffact (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∞–ª–∏—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç))
    (tipster/deffact (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –±–æ–± —É—á–∏—Ç–µ–ª—å))
    (tipster/deffact (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è —á–∞—Ä–ª–∏ –≤—Ä–∞—á))
    
    (case lang
      :ru (do
            (println "\nüìù –î–æ–±–∞–≤–∏–ª–∏ —Ñ–∞–∫—Ç—ã:")
            (println "   (—á–µ–ª–æ–≤–µ–∫ –∞–ª–∏—Å–∞)")
            (println "   (—á–µ–ª–æ–≤–µ–∫ –±–æ–±)")  
            (println "   (—á–µ–ª–æ–≤–µ–∫ —á–∞—Ä–ª–∏)")
            (println "   (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∞–ª–∏—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç)")
            (println "   (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –±–æ–± —É—á–∏—Ç–µ–ª—å)")
            (println "   (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è —á–∞—Ä–ª–∏ –≤—Ä–∞—á)")
            
            (println "\n‚ùì –ó–∞–ø—Ä–æ—Å: –ö—Ç–æ —è–≤–ª—è–µ—Ç—Å—è —á–µ–ª–æ–≤–µ–∫–æ–º?")
            (println "   query: (—á–µ–ª–æ–≤–µ–∫ ?X)")
            (doseq [result (tipster/query (—á–µ–ª–æ–≤–µ–∫ ?X))]
              (println "   ‚úì " result))
            
            (println "\n‚ùì –ó–∞–ø—Ä–æ—Å: –ö–∞–∫–∏–µ –µ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏?")
            (println "   query: (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è ?–ö—Ç–æ ?–ß—Ç–æ)")
            (doseq [result (tipster/query (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è ?–ö—Ç–æ ?–ß—Ç–æ))]
              (println "   ‚úì " result)))
      :en (do
            (println "\nüìù Added facts:")
            (println "   (—á–µ–ª–æ–≤–µ–∫ –∞–ª–∏—Å–∞)     ; (person alice)")
            (println "   (—á–µ–ª–æ–≤–µ–∫ –±–æ–±)       ; (person bob)")  
            (println "   (—á–µ–ª–æ–≤–µ–∫ —á–∞—Ä–ª–∏)     ; (person charlie)")
            (println "   (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∞–ª–∏—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç)  ; (profession alice programmer)")
            (println "   (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è –±–æ–± —É—á–∏—Ç–µ–ª—å)        ; (profession bob teacher)")
            (println "   (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è —á–∞—Ä–ª–∏ –≤—Ä–∞—á)         ; (profession charlie doctor)")
            
            (println "\n‚ùì Query: Who is a person?")
            (println "   query: (—á–µ–ª–æ–≤–µ–∫ ?X)   ; (person ?X)")
            (doseq [result (tipster/query (—á–µ–ª–æ–≤–µ–∫ ?X))]
              (println "   ‚úì " result))
            
            (println "\n‚ùì Query: What professions exist?")
            (println "   query: (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è ?–ö—Ç–æ ?–ß—Ç–æ)   ; (profession ?Who ?What)")
            (doseq [result (tipster/query (–ø—Ä–æ—Ñ–µ—Å—Å–∏—è ?–ö—Ç–æ ?–ß—Ç–æ))]
              (println "   ‚úì " result)))))) 
