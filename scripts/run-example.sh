#!/bin/bash

# Universal script for running Tipster examples
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ Tipster
# Usage: ./scripts/run-example.sh <example-name> [--lang ru]
# Examples: basic, family, rules, animals, math, interactive, all

EXAMPLE_NAME="$1"
LANG_ARG=""

# Parse language argument
if [[ "$2" == "--lang" && "$3" == "ru" ]]; then
    LANG_ARG=":lang :ru"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞
show_description() {
    local example_name="$1"
    
    # Run Clojure to get example description
    local desc=$(clj -M:examples -e "
    (require '[${example_name} :as ex])
    (let [desc (ex/description ${LANG_ARG})]
      (println (:title desc))
      (println (:subtitle desc))
      (println \"==============================\"))")
    
    echo "$desc"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —á—Ç–æ –∏–∑—É—á–∏–ª–∏
show_what_you_learned() {
    local example_name="$1"
    
    # Get information about what was learned
    local learned=$(clj -M:examples -e "
    (require '[${example_name} :as ex])
    (let [desc (ex/description ${LANG_ARG})]
      (println)
      (if (= \":ru\" \"${LANG_ARG##* }\")
        (println \"üí° –ß—Ç–æ –≤—ã –∏–∑—É—á–∏–ª–∏:\")
        (println \"üí° What you learned:\"))
      (doseq [item (:what-you-learn desc)]
        (println \"   ‚Ä¢\" item))
      (println)
      (when (:next desc)
        (if (= \":ru\" \"${LANG_ARG##* }\")
          (println \"üìñ –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä:\" (:next desc))
          (println \"üìñ Next example:\" (:next desc)))))")
    
    echo "$desc"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–∞
run_example() {
    local example_name="$1"
    
    show_description "$example_name"
    
    # Run example
    clj -M:examples -e "
    (require '[${example_name} :as ex])
    (ex/run-example ${LANG_ARG})"
    
    show_what_you_learned "$example_name"
}

# Function to run all examples
run_all_examples() {
    if [[ "$LANG_ARG" == *":ru"* ]]; then
        echo "üöÄ TIPSTER - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
        echo $(printf '%*s' 60 '' | tr ' ' '=')
        echo "–õ–æ–≥–∏—á–µ—Å–∫–∏–π –¥–≤–∏–∂–æ–∫ –¥–ª—è Clojure —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–∞–∫—Ç–æ–≤, –ø—Ä–∞–≤–∏–ª –∏ –∑–∞–ø—Ä–æ—Å–æ–≤"
        echo $(printf '%*s' 60 '' | tr ' ' '=')
    else
        echo "üöÄ TIPSTER - Usage Examples"
        echo $(printf '%*s' 60 '' | tr ' ' '=')
        echo "Logic engine for Clojure with support for facts, rules and queries"
        echo $(printf '%*s' 60 '' | tr ' ' '=')
    fi
    
    local examples=("basic" "family" "rules" "animals" "math" "interactive")
    
    for example in "${examples[@]}"; do
        clj -M:examples -e "
        (require '[${example} :as ex])
        (ex/run-example ${LANG_ARG})"
    done
    
    echo ""
    if [[ "$LANG_ARG" == *":ru"* ]]; then
        echo "üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
        echo ""
        echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:"
        echo "   ./scripts/run-example.sh basic --lang ru"
        echo "   ./scripts/run-example.sh family --lang ru"
        echo "   ./scripts/run-example.sh rules --lang ru"
        echo "   ./scripts/run-example.sh animals --lang ru"
        echo "   ./scripts/run-example.sh math --lang ru"
        echo "   ./scripts/run-example.sh interactive --lang ru"
        echo ""
        echo "üìñ –ò–ª–∏ –∏–∑—É—á–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –≤ —Ñ–∞–π–ª–µ: examples/ru/README.md"
    else
        echo "üéâ All examples completed!"
        echo ""
        echo "üí° Try running individual examples:"
        echo "   ./scripts/run-example.sh basic"
        echo "   ./scripts/run-example.sh family"
        echo "   ./scripts/run-example.sh rules"
        echo "   ./scripts/run-example.sh animals"
        echo "   ./scripts/run-example.sh math"
        echo "   ./scripts/run-example.sh interactive"
        echo ""
        echo "üìñ Or study examples in file: examples/README.md"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$EXAMPLE_NAME" in
    "basic"|"family"|"rules"|"animals"|"math"|"interactive")
        run_example "$EXAMPLE_NAME"
        ;;
    "all"|"")
        run_all_examples
        ;;
    "list")
        if [[ "$LANG_ARG" == *":ru"* ]]; then
            echo "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:"
            echo "   basic       - –û—Å–Ω–æ–≤—ã: —Ñ–∞–∫—Ç—ã –∏ –∑–∞–ø—Ä–æ—Å—ã"
            echo "   family      - –°–µ–º–µ–π–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"
            echo "   rules       - –ü—Ä–∞–≤–∏–ª–∞ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥"
            echo "   animals     - –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö"
            echo "   math        - –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"
            echo "   interactive - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"
            echo "   all         - –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–¥—Ä—è–¥"
        else
            echo "üìö Available examples:"
            echo "   basic       - Basics: facts and queries"
            echo "   family      - Family relationships"
            echo "   rules       - Rules and logical inference"
            echo "   animals     - Animal classification"
            echo "   math        - Mathematical relations"
            echo "   interactive - Interactive mode"
            echo "   all         - All examples in sequence"
        fi
        ;;
    *)
        if [[ "$LANG_ARG" == *":ru"* ]]; then
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä: $EXAMPLE_NAME"
            echo ""
            echo "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:"
            echo "   basic, family, rules, animals, math, interactive, all"
            echo ""
            echo "üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/run-example.sh <example-name> [--lang ru]"
            echo "üí° –°–ø–∏—Å–æ–∫ –ø—Ä–∏–º–µ—Ä–æ–≤: ./scripts/run-example.sh list --lang ru"
        else
            echo "‚ùå Unknown example: $EXAMPLE_NAME"
            echo ""
            echo "üìö Available examples:"
            echo "   basic, family, rules, animals, math, interactive, all"
            echo ""
            echo "üí° Usage: ./scripts/run-example.sh <example-name> [--lang ru]"
            echo "üí° List examples: ./scripts/run-example.sh list"
        fi
        exit 1
        ;;
esac 
